# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'choreograph.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        print("attempting to calculate number of frames in recent MDgui.py MD runs")
        # read openmm ctl file
        MDpath = './MDr.ctl'
        check_file = os.path.isfile(MDpath)
        print(check_file)
        if(check_file == True):
            infile = open("MDr.ctl", "r")
            infile_lines = infile.readlines()
            for x in range(len(infile_lines)):
                infile_line = infile_lines[x]
                #print(infile_line)
                infile_line_array = str.split(infile_line, ",")
                header = infile_line_array[0]
                value = infile_line_array[1]
                #print(header)
                #print(value)
                if(header == "prod_len"):
                    prod_len = value
                    prod_len = int(prod_len)
                    n_frames = int(5*(prod_len/1000))
                    print("number of frames in last MDgui.py MD session is",n_frames)
        if(check_file == False):
            n_frames = "could not find"
        Dialog.setObjectName("Dialog")
        Dialog.resize(575, 743)
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setGeometry(QtCore.QRect(310, 670, 231, 51))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.pushButton_2 = QtWidgets.QPushButton(self.frame)
        self.pushButton_2.setGeometry(QtCore.QRect(20, 10, 131, 27))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton = QtWidgets.QPushButton(self.frame)
        self.pushButton.setGeometry(QtCore.QRect(160, 10, 61, 27))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.closeIt)
        self.frame_2 = QtWidgets.QFrame(Dialog)
        self.frame_2.setGeometry(QtCore.QRect(10, 190, 551, 161))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.checkBox_2 = QtWidgets.QCheckBox(self.frame_2)
        self.checkBox_2.setGeometry(QtCore.QRect(10, 10, 481, 24))
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox = QtWidgets.QCheckBox(self.frame_2)
        self.checkBox.setGeometry(QtCore.QRect(10, 70, 521, 24))
        self.checkBox.setObjectName("checkBox")
        self.checkBox_3 = QtWidgets.QCheckBox(self.frame_2)
        self.checkBox_3.setGeometry(QtCore.QRect(10, 40, 521, 24))
        self.checkBox_3.setObjectName("checkBox_3")
        self.checkBox_4 = QtWidgets.QCheckBox(self.frame_2)
        self.checkBox_4.setGeometry(QtCore.QRect(10, 100, 511, 24))
        self.checkBox_4.setObjectName("checkBox_4")
        self.checkBox_5 = QtWidgets.QCheckBox(self.frame_2)
        self.checkBox_5.setGeometry(QtCore.QRect(10, 130, 531, 24))
        self.checkBox_5.setObjectName("checkBox_5")
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(170, 40, 211, 41))
        self.label_2.setTextFormat(QtCore.Qt.RichText)
        self.label_2.setObjectName("label_2")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(10, 10, 551, 161))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("waveform.gif"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(100, 20, 401, 31))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Dialog)
        self.label_4.setGeometry(QtCore.QRect(30, 140, 521, 20))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(Dialog)
        self.label_5.setGeometry(QtCore.QRect(60, 360, 461, 20))
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(Dialog)
        self.label_6.setGeometry(QtCore.QRect(60, 470, 181, 18))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(Dialog)
        self.label_7.setGeometry(QtCore.QRect(350, 470, 161, 18))
        self.label_7.setObjectName("label_7")
        self.textEdit = QtWidgets.QTextEdit(Dialog)
        self.textEdit.setGeometry(QtCore.QRect(30, 390, 231, 71))
        self.textEdit.setObjectName("textEdit")
        self.textEdit_2 = QtWidgets.QTextEdit(Dialog)
        self.textEdit_2.setGeometry(QtCore.QRect(310, 390, 231, 71))
        self.textEdit_2.setObjectName("textEdit_2")
        self.frame_3 = QtWidgets.QFrame(Dialog)
        self.frame_3.setGeometry(QtCore.QRect(30, 660, 251, 80))
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_3.setGeometry(QtCore.QRect(40, 10, 181, 27))
        self.pushButton_3.setObjectName("pushButton_3")
        self.progressBar = QtWidgets.QProgressBar(self.frame_3)
        self.progressBar.setGeometry(QtCore.QRect(10, 50, 231, 23))
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.frame_4 = QtWidgets.QFrame(Dialog)
        self.frame_4.setGeometry(QtCore.QRect(0, 510, 571, 131))
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.lineEdit = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit.setGeometry(QtCore.QRect(290, 100, 141, 26))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setText("/usr/lib/ucsf-chimerax/bin/")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_2.setGeometry(QtCore.QRect(280, 10, 81, 26))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 100, 81, 26))
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_3.setText("%s" % n_frames)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 70, 81, 26))
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.lineEdit_5 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_5.setGeometry(QtCore.QRect(10, 40, 81, 26))
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_6 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_6.setGeometry(QtCore.QRect(280, 40, 81, 26))
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.lineEdit_7 = QtWidgets.QLineEdit(self.frame_4)
        self.lineEdit_7.setGeometry(QtCore.QRect(280, 70, 81, 26))
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.lineEdit_7.setText("1")
        self.label_8 = QtWidgets.QLabel(self.frame_4)
        self.label_8.setGeometry(QtCore.QRect(30, 0, 171, 31))
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.frame_4)
        self.label_9.setGeometry(QtCore.QRect(100, 40, 181, 18))
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.frame_4)
        self.label_10.setGeometry(QtCore.QRect(100, 70, 151, 18))
        self.label_10.setObjectName("label_10")
        self.label_11 = QtWidgets.QLabel(self.frame_4)
        self.label_11.setGeometry(QtCore.QRect(100, 100, 181, 18))
        self.label_11.setObjectName("label_11")
        self.label_12 = QtWidgets.QLabel(self.frame_4)
        self.label_12.setGeometry(QtCore.QRect(370, 10, 211, 18))
        self.label_12.setObjectName("label_12")
        self.label_13 = QtWidgets.QLabel(self.frame_4)
        self.label_13.setGeometry(QtCore.QRect(370, 40, 201, 18))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.frame_4)
        self.label_14.setGeometry(QtCore.QRect(370, 70, 201, 18))
        self.label_14.setObjectName("label_14")
        self.label_15 = QtWidgets.QLabel(self.frame_4)
        self.label_15.setGeometry(QtCore.QRect(440, 100, 131, 18))
        self.label_15.setObjectName("label_15")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "ChoreoGraph3.0"))
        self.pushButton_2.setText(_translate("Dialog", "run analyses"))
        self.pushButton.setText(_translate("Dialog", "exit"))
        self.pushButton_3.setText(_translate("Dialog", "run MD sampling"))
        self.checkBox_2.setText(_translate("Dialog", "de-noised vibrational frequency analysis on each amino acid"))
        self.checkBox.setText(_translate("Dialog", "choregraphic analysis to identify coordinated amino acid groups"))
        self.checkBox_3.setText(_translate("Dialog", "kernel learning to identify sequence of contacts over time "))
        self.checkBox_4.setText(_translate("Dialog", "generate sound file from the protein interaction dynamics"))
        self.checkBox_5.setText(_translate("Dialog", "render movie (with sound) from the protein interaction dynamics"))
        self.label_3.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:14pt; color:#ffff7f;\">ChoreoGraph 3.0 - BabbitLab@RIT</span></p></body></html>"))
        self.label_4.setText(_translate("Dialog", "<html><head/><body><p><span style=\" color:#55ffff;\">choreographic and musical analysis of protein interaction dynamics</span></p></body></html>"))
        self.label_5.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-weight:600;\">list input files for structure, topology, and trajectory</span></p></body></html>"))
        self.label_6.setText(_translate("Dialog", "<html><head/><body><p><span style=\" color:#aa0000;\">bound protein complex</span></p></body></html>"))
        self.label_7.setText(_translate("Dialog", "<html><head/><body><p><span style=\" color:#aa0000;\">unbound reference</span></p></body></html>"))
        self.textEdit.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">bound_complex.pdb</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">bound_complex.prmtop</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">bound_complex.nc</p></body></html>"))
        self.textEdit_2.setHtml(_translate("Dialog", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">unbound_protein.pdb</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">unbound_protein.prmtop</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">unbound_protein.nc</p></body></html>"))
        self.label_8.setText(_translate("Dialog", "<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">input constants</span></p></body></html>"))
        self.label_9.setText(_translate("Dialog", "<html><head/><body><p>number of subsamples</p></body></html>"))
        self.label_10.setText(_translate("Dialog", "<html><head/><body><p>frames/subsample</p></body></html>"))
        self.label_11.setText(_translate("Dialog", "<html><head/><body><p>total number of frames</p></body></html>"))
        self.label_12.setText(_translate("Dialog", "<html><head/><body><p>number of protein sites</p></body></html>"))
        self.label_13.setText(_translate("Dialog", "<html><head/><body><p>multi-chain N terminals</p></body></html>"))
        self.label_14.setText(_translate("Dialog", "<html><head/><body><p>starting index on protein</p></body></html>"))
        self.label_15.setText(_translate("Dialog", "<html><head/><body><p>chimerax path</p></body></html>"))

#############################################################################################
##############################  subroutines  ################################################
#############################################################################################
    def run_program(self):
        
        print("writing control file")
        n_subsamples = self.lineEdit.text()
        #print(n_subsamples)
        frs_subsample = self.lineEdit_2.text()
        #print(frs_subsample)
        frs_total = self.lineEdit_3.text()
        #print(frs_total)
        frs_usable = int(frs_total)-int(frs_subsample) - 1
        
        n_chains = self.lineEdit_4.text()
        #print(n_chains)
        n_sites = self.lineEdit_5.text()
        #print(n_sites)
        start_site = self.lineEdit_6.text()
        #print(start_site)
        chx_path = self.lineEdit_7.text()
        #print(chx_path)
        query_list = self.textEdit.toPlainText()
        #print(query_list)
        query_list = str.split(query_list, "\n")
        #print(query_list)
        query_pdb = query_list[0]
        query_id = query_pdb[:-4]
        query_top = query_list[1]
        query_traj = query_list[2]
        reference_list = self.textEdit_2.toPlainText()
        #print(reference_list)
        reference_list = str.split(reference_list, "\n")
        #print(reference_list)
        reference_pdb = reference_list[0]
        reference_id = reference_pdb[:-4]
        reference_top = reference_list[1]
        reference_traj = reference_list[2]
        
        # check and set graph style
        if self.radioButton.isChecked() == True:
            graph_color = "light"
        else:
            graph_color = "dark"
        
        # analyses to run
        if self.checkBox.isChecked() == True:
            divergence = "yes"
        else:
            divergence = "no"
        if self.checkBox_2.isChecked() == True:
            discrepancy = "yes"
        else:
            discrepancy = "no"
        if self.checkBox_3.isChecked() == True:
            conservation = "yes"
        else:
            conservation = "no"
        if self.checkBox_4.isChecked() == True:
            coordination = "yes"
        else:
            coordination = "no"
        #if self.checkBox_5.isChecked() == True:
        #    variants = "yes"
        #else:
        #    variants = "no"
        
        # write file
        f = open("./DROIDS.ctl", "w") 
        f.write("queryID,%s,#pdb id for query structure\n" % query_id)
        f.write("referenceID,%s,#pdb id for ref structure\n" % reference_id)
        f.write("queryPDB,%s,#pdb file for query structure\n" % query_pdb)
        f.write("referencePDB,%s,#pdb file for ref structure\n" % reference_pdb)
        f.write("queryTOP,%s,#topology for query structure\n" % query_top)
        f.write("referenceTOP,%s,#topology for ref structure\n" % reference_top)
        f.write("queryTRAJ,%s,#trajectory for query structure\n" % query_traj)
        f.write("referenceTRAJ,%s,#trajectory for ref structure\n" % reference_traj)
        f.write("subsamples,%s,#number of subsamples\n" % n_subsamples)
        f.write("frame_size,%s,#number of frames per subsample\n" % frs_subsample)
        f.write("n_frames,%s,#total number of frames in simulation (5000 per ns)\n" % frs_usable)
        f.write("n_terminals,%s,#n terminal locations for multi-chain PDB\n" % n_chains)
        f.write("length,%s,#total length of protein\n" % n_sites)
        f.write("start,%s,#Nterminal AA starts at position...\n" % start_site)
        f.write("chimerax,%s,#path to chimerax binary\n" % chx_path)
        f.write("bgcolor,%s,#background color graphics\n" % graph_color)
        f.write("divergence,%s,#run KL divergence analysis\n" % divergence)
        f.write("discrepancy,%s,#run MMD analysis\n" % discrepancy)
        f.write("conservation,%s,#run conserved dynamics analysis\n" % conservation)
        f.write("coordination,%s,#run coordinated dynamics analysis\n" % coordination)
        #f.write("variants,%s,#run coordinated dynamics analysis\n" % variants)
        f.close()
        
        
        print("running DROIDS/maxDemon 5.0 parsers")
        cmd1 = "python3 cpptraj_sampler.py"
        os.system(cmd1)
        
    def run_analyses(self):
        print("running DROIDS/maxDemon 5.0 analyses")
        cmd2 = "python3 chimerax_analyzer.py"
        os.system(cmd2)
    
    def closeIt(self):
        print("ChoreoGraph 3.0 program closed")
        sys.exit(app.exec_())

#############################################################################################
if __name__ == "__main__":
    import os
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
